#!/usr/bin/env ruby

require 'net/http'
require 'json'
# require 'pry'
require 'faye/websocket'
require 'eventmachine'
require 'byebug'

class Slack
  TOKEN = "xoxp-19007494517-19011474082-19007915220-205475775d"
  # TOKEN = "xoxb-19012836615-UXersvIAojrfXGYCHiuSu2ov" => only works with the bot

  def real_time_session
    get('rtm.start')
  end

  def game_channels
    channel_list.select do |channel|
      channel['name'].match(/\Achess\-/)
    end
  end

  def send_message(message, channel_name)
    channel_id = find_channel_id(channel_name)
    resource = "chat.postMessage"
    args = "channel=#{channel_id}&text="+message
    api(resource, args)
  end

  def find_channel_id(channel_name)
    game_channels.select { |channel| channel["name"] == channel_name }.first["id"]
  end

  private

  def channel_list
    data = get('channels.list')
    data["channels"].map do |channel|
      slice('id', 'name', channel)
    end
  end

  def slice(*keys, hash)
    keys.map.with_object({}) do |key, slice|
      slice[key] = hash[key]
    end
  end

  def get(resource)
    uri = URI("https://slack.com/api/#{resource}?token=#{TOKEN}")
    response = Net::HTTP.get(uri)
    JSON.parse(response)
  end

  def api(resource, args)
    uri = URI("https://slack.com/api/#{resource}?token=#{TOKEN}&"+args)
    Net::HTTP.get(uri)
  end
end

class Session
  def initialize
    @slack = Slack.new
  end

  def run
    message = "hello world"
    # @slack.send_message(message, test_channel)
    # send_message_to_channel(message, @slack.find_channel_id(test_channel))

    read_channel
    # while(true)

    # end
  end

  def test_channel
    "chess-sam-kunal"
  end

  def send_message_to_channel(message, channel_id)
    websocket.on :open do |event|
      websocket.send({ "id": 1, "type": "message", "channel": channel_id, "text": message }.to_json)
    end
  end

  def read_channel
    websocket.on :message do |event|
      p [:message, event.data]

      data = JSON.parse(event.data)
      if data["type"] == "message"
        message = "Parrot:" + data["text"]
        send_message_to_channel(message, @slack.find_channel_id(test_channel))
      end
    end
  end
 
  def talky
    websocket.on :message do |event|
      p [:message, event.data]
    end

    websocket.on :close do |event|
      p [:close, event.code, event.reason]
      reset
    end
  end

  private

  def websocket
    @websocket ||= Faye::WebSocket::Client.new(websocket_url)
  end

  def reset
    @websocket = nil
  end

  def websocket_url
    @slack.real_time_session["url"]
  end
end

EM.run { Session.new.run }
